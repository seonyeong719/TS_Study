OOP?
    -(Object Oriented Programming) 이라고 하며, 객체지향 프로그래밍이다. 
    - Object 단위로 만들어나가기 때문에 한곳에서 문제가 생긴다면 관련된 obj만 수정해주면 됨.
    - 여러번 반복되는 곳이 있다면 관련된 obj를 재사용할 수 있다.  

=> OOP는 생산성을 높혀주고 , 퀄리티 높은 프로그램을 만들 수 있게 도와주며, 유지보수가 가능하게 만들어줌 

 
 * OOP의 중요한 4가지 원칙!*


 

1. Encapsulation (캡슐화가 잘되어있어야 함)
    1-1. 서로 관련있는 데이터와 함수를 한 오브젝트안에 담아두고 외부에서 보여질 필요가 없는 데이터를 잘 숨겨 놓음으로써
        캡슐화를 할 수 있다. (=> 어떤게 관련있는지, 데이터를 보여줄지 말지 이런것들을 생각하고 만들어 내야 함)
    1-2. 상태를 외부에서 변경할 수 는 없지만 외부 행동 함수를 통해서 내부를 변경할 수 있다.  

2. Abstraction (추상성이 좋아야 한다.)
    2-1. 내부의 복잡한 기능을 우리가 다 이해하지 않고 외부에서 간단한 인터페이스를 통해서 쓸 수 있는것을 말한다. 
        내부가 복잡하더라도 지정된 외부에서만 보이는 인터페이스의 함수를 이용해서 오브젝트를 사용할 수 있다. 

3. Inheritance (상속을 통해서 코드의 재사용성을 높일수 있다.)

위 세가지를 통해서 ~ 4번을 구현할 수 있다. 
4. Polymorphism (다양성을 이용해서 좀 더 객체지향스러운 프로그래밍을 할 수 있다.)


